# -*- coding: utf-8 -*-
"""Desafio PythonPro

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T7C8qnNCcQ66Qb797GaRwKK-jVdUWVqw

# Desafio PythonPro

Nesse Notebook vou resolver vários exercícios da [Python Brasil](https://wiki.python.org.br/ListaDeExercicios).

## [Estrutura Sequencial](https://wiki.python.org.br/EstruturaSequencial)

Exercício 1:
"""

print('Olá Mundo!')

type('Olá Mundo!')

"""Exercício 2:"""

número = input('Digite um número:')
print(f'O número informado foi {número}')

"""Exercício 3"""

número_1 = int(input('Digite um número:'))
número_2 = int(input('Digite outro número:'))
soma = número_1 + número_2
print(f'A soma dos dois números é {soma}')

"""Exercício 17

Faça um Programa para uma loja de tintas. O programa deverá pedir o tamanho em metros quadrados da área a ser pintada. Considere que a cobertura da tinta é de 1 litro para cada 6 metros quadrados e que a tinta é vendida em latas de 18 litros, que custam R$ 80,00 ou em galões de 3,6 litros, que custam R 25,00.
Informe ao usuário as quantidades de tinta a serem compradas e os respectivos preços em 3 situações:

comprar apenas latas de 18 litros;

comprar apenas galões de 3,6 litros;

misturar latas e galões, de forma que o desperdício de tinta seja menor. Acrescente 10% de folga e sempre arredonde os valores para cima, isto é, considere latas cheias.
"""

import math

print('Obs.: Digite . ponto para substituir , vírgula')

altura = float(input('Altura: '))
largura = float(input('Largura: '))
área = altura * largura # Em metro quadrado
print(f'Metro Quadrado: {área}m2')

folga = área+área*0.10 # 10% a mais de sobra
cobertura = folga/6 # Litros por metro quadrado
print(f'Rendimento: {cobertura}L')

# Compra de tintas com apenas latas de 18l:
litros_por_lata = 18
número_de_latas = cobertura / litros_por_lata
valor_da_lata = 80.00
latas = math.ceil(número_de_latas)
total = latas*valor_da_lata
print(f'Você precisará de {latas} Latas de 18L, Totalizando em R$ {total}0')

# Compra de tintas com apenas galões de 3.6l:
litros_por_galão = 3.6
número_de_galões = cobertura / litros_por_galão
valor_do_galão = 25.00
galões = math.ceil(número_de_galões)
total_galão = galões*valor_do_galão
print(f'Você precisará de {galões} galões de 3.6L, Totalizando em R$ {total_galão}0')

# Compra de tinta otimizada utilizando latas e galões:
latas = math.floor(número_de_latas)
total = latas*valor_da_lata
litros_restantes = cobertura % litros_por_lata
número_de_galões = litros_restantes / litros_por_galão
galões = math.ceil(número_de_galões)
resultado_otimizado = latas*valor_da_lata + galões*valor_do_galão
print(f'Você precisará de {galões} galões de 3.6L e {latas} latas de 18L, Totalizando em R$ {resultado_otimizado}0')

"""##[ Estrutura de Decisão](https://wiki.python.org.br/EstruturaDeDecisao)

Exercício 3
"""

True, False
print(5<3)
print(5>3)
print('m'=='a')
print('anderson'.upper(), 'ANDERSON'.lower())

sexo = input('Digite o sexo (M para Masculino, F para Feminino, I para Indefinido): ').upper()
if sexo == 'M':
  print('Masculino')
elif sexo == 'F':
  print('Feminino')
elif sexo == 'I':
  print('Indefinido')
else:
  print('Inválido')

print('Finalizou o programa')

"""Exercício 5

Faça um programa para a leitura de duas notas parciais de um aluno. O programa deve calcular a média alcançada por aluno e apresentar:

A mensagem "Aprovado", se a média alcançada for maior ou igual a sete;

A mensagem "Reprovado", se a média for menor do que sete;

A mensagem "Aprovado com Distinção", se a média for igual a dez.
"""

print('Notas de 0 a 10')
notas = []
primeira_nota = float(input('Primeira nota: '))
segunda_nota = float(input('Segunda nota: '))
notas.append(primeira_nota)
notas.append(segunda_nota)
soma_das_notas = sum(notas)
quantidade = len(notas)
média = soma_das_notas / quantidade
print(média)

if média == 10:
  print('APROVADO COM DISTINÇÃO!!!')
elif média >= 7:
  print('APROVADO!!!')
elif média < 7:
  print('Reprovado')

"""Exercício 19

"""

numero = 22
centenas_str = dezenas_str = unidades_str = ''

centenas_int, numero = divmod(numero, 100)

partes_numericas=0

if centenas_int == 1:
  centenas_str = '1 centena'
  partes_numericas+=1
elif centenas_int > 1:
  centenas_str = f'{centenas_int} centenas'
  partes_numericas+=1

dezenas_int, numero = divmod(numero, 10)

if dezenas_int == 1:
  dezenas_str = '1 dezena'
  partes_numericas+=1
elif dezenas_int > 1:
  dezenas_str = f'{dezenas_int} dezenas'
  partes_numericas+=1

if numero == 1:
  unidade_str = '1 unidade'
  partes_numericas+=1
elif numero > 1:
  unidades_str = f'{numero} unidades'
  partes_numericas+=1

if partes_numericas == 0:
  print('Númeor 0 não possui centenas, dezenas ou unidades')
elif partes_numericas == 1:
  print(centenas_str + dezenas_str + unidades_str)
elif partes_numericas == 3:
  print(f'{centenas_str}, {dezenas_str} e {unidades_str}')
elif partes_numericas == 2:
  if centenas_str != '':
    segunda_parte = dezenas_str + unidades_str
    print(f'{centenas_str} e {segunda_parte}')
  else: 
    print(f'{dezenas_str} e {unidades_str}')

"""Exercício 21"""

saque = 299

notas_de_100 = notas_de_50 = notas_de_10 = notas_de_5 = notas_de_1 = 0

notas_de_100, saque = divmod(saque, 100)

notas_de_50, saque = divmod(saque, 50)

notas_de_10, saque = divmod(saque, 10)

notas_de_5, saque = divmod(saque, 5)

notas_de_1, saque = divmod(saque, 1)

if notas_de_100 > 0:
  print(f'{notas_de_100} nota(s) de 100')

if notas_de_50 > 0:
  print(f'{notas_de_50} nota(s) de 50')

if notas_de_10 > 0:
  print(f'{notas_de_10} nota(s) de 10')

if notas_de_5 > 0:
  print(f'{notas_de_5} nota(s) de 5')

if notas_de_1 > 0:
  print(f'{notas_de_1} nota(s) de 1')

"""## [Estrutura de Repetição](https://wiki.python.org.br/EstruturaDeRepeticao)

Exercício 1
"""

while True:
  try:
    numero = int(input('digite um valor de 0 a 10: '))
  except ValueError:
    print('Deve ser fornecido um valor inteiro')
  else:
    if 0 <= numero <= 10:
      print(f'Número informado é {numero}')
      break
    else:
      print('O número deve estar entre 0 a 10')

"""Exercício 4:

Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Faça um programa que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento.
"""

pop_a = 80_000
pop_b = 200_000
taxa_cres_a = 1.03
taxa_cres_b = 1.015
anos = 0

while pop_a < pop_b:
  #print(f'####### População do ano: {anos}')
  #print(f'População de A: {pop_a}')
  #print(f'População de B: {pop_b}')
  anos += 1
  pop_a = int(pop_a * taxa_cres_a)
  pop_b *= taxa_cres_b
  pop_b = int(pop_b)

print(f'# População do ano: {anos}')
print(f'População de A: {pop_a}')
print(f'População de B: {pop_b}')

"""Exercício 7:"""

maximo = float(input("Digite um número: "))

for _ in range(4):
  maximo = max(maximo, float(input("Digite um número: ")))
  print(f'Número máximo encontrado até agora é: {maximo}')

"""Exercício 8:
Faça um programa que leia 5 números e informe a soma e a média dos números.
"""

soma = float(input("Digite um número: "))

for n in range(2, 6):
  soma +=  float(input("Digite um número: "))
  média = soma / n
  print(f'A soma dos números é: {soma}')
  print(f'A média é: {média}')

"""## [Exercícios Lista](https://wiki.python.org.br/ExerciciosListas)

Exercício 16
"""

salarios = [200, 250, 320, 413, 516, 680, 791, 877, 999, 1000, 2000, 3000]
contagem_de_faixa_salarial = [0] * 9
for salario in salarios:
  indice = salario // 100 - 2
  indice_maximo = len(contagem_de_faixa_salarial) - 1
  indice = min(indice, indice_maximo)
  contagem_de_faixa_salarial[indice] += 1

print(contagem_de_faixa_salarial)

"""## [Exercícios de Funções](https://wiki.python.org.br/ExerciciosFuncoes)

Exercício 1
"""

def imprimir_triangulo_de_numeros(n: int):
  for i in range(1, n + 1):
    for _ in range(i):
      print(i, end= '   ')
    print('')

print('Triangulo com 1')
imprimir_triangulo_de_numeros(1)
print('Triangulo com 2')
imprimir_triangulo_de_numeros(2)
print('Triangulo com 3')
imprimir_triangulo_de_numeros(3)

"""Exercício 2"""

def imprimir_triangulo_de_numeros_crescentes(n: int):
  for linha in range(1, n + 1):
    for coluna in range(1, linha + 1):
      print(coluna, end= '   ')
    print('')

print('Triangulo com 1')
imprimir_triangulo_de_numeros_crescentes(1)
print('Triangulo com 2')
imprimir_triangulo_de_numeros_crescentes(2)
print('Triangulo com 3')
imprimir_triangulo_de_numeros_crescentes(3)

"""## [Exercícios com Strings](https://wiki.python.org.br/ExerciciosComStrings)

Exercício 1
"""

s1= input('Digite uma string: ')
s2= input('Digite outra string: ')

tamanho1 = len(s1)
tamanho2 = len(s2)

print(f'"{s1}": {tamanho1} caracteres')
print(f'"{s2}": {tamanho2} caracteres')

comparação_de_tamanho = 'diferentes'
comparação_de_conteudo = 'diferentes'

if s1 == s2:
  comparação_de_tamanho = 'iguais'
  comparação_de_conteudo = 'iguais'
elif tamanho1 == tamanho2:
  comparação_de_tamanho = 'iguais'


print(f'As duas strings são de tamanhos {comparação_de_tamanho}')
print(f'As duas strings possuem conteúdo  {comparação_de_conteudo}')

"""Exercício 2"""

nome = 'Anderson'.upper()
nome_invertido_por_letras = ''.join(reversed(nome))

print(nome_invertido_por_letras)

"""Exercício 11"""

palavra = 'Programador'.upper()

print('Jogo da Forca')

print('A palavra é:  ', end='')
for letra in palavra:
  print(f'_ ', end='')

conjunto_letras_palavra = set(palavra)
conjunto_letras_digitadas = set()
erros = 0

while (not conjunto_letras_palavra.issubset(conjunto_letras_digitadas)) and erros < 7:
  print()
  print()
  letra_digitada = input('Digite uma letra: ').upper()
  conjunto_letras_digitadas.add(letra_digitada)
  if letra_digitada in conjunto_letras_palavra:
    print('A palavra é: ', end='')
    for letra in palavra:
      if letra in conjunto_letras_digitadas:
        print(f'{letra} ', end='')
      else:
        print('_ ', end='')
  else:
    erros += 1
    print(f'-> Erro {erros} de 6 chances, tente de novo!')
  
  print()
  print('Letras já digitadas: ',conjunto_letras_digitadas)

if erros < 7:
  print("Parabéns, você ganhou!")
else:
  print('Infelizmente não foi dessa vez. Você perdeu.')

"""2520 é o menor número inteiro que pode ser divisível por 1 a 10.

Encontre o menor número inteiro que pode ser divisível por 1 a 20.

Para resolver esse problema é necessário saber utilizar algumas dessas instruções básicas de programação como por exemplo:

IF e ELSE
FOR e WHILE
Nos loops tem a instrução: break ou exit para interromper o loop
Operadores matemáticos: +, -, /, * e %
"""

